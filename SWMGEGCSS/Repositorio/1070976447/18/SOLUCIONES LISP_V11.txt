(SETQ R1 '((1 2) (3 4)))
(SETQ R2 '((3 4) (5 6)))
(SETQ R3 '((1 2 3) (3 4 5) (4 5 6)))
(SETQ R4 '((2 3 4) (4 5 6) (6 7 8)))
(defun sumlista (A) ((null A) 0) (+ (CAR A) (sumlista(CDR A))))
(defun promlista (A) (return (/ (sumlista A) (LENGTH A))))
(defun prom A (return (/ (sumlista A) (LENGTH A))))
(defun SUMAM-r (L M S)
       (SETQ X (LENGTH L))
       (SUMAM-aux L M (- X 1) S)
)
(defun SUMAM-aux (A B X S)
         ((MINUSP X) S)
         (PUSH (MAPCAR '+ (NTH X A) (NTH X B)) S)
         (SUMAM-aux A B (- X 1) S)
)
(defun SUMAM (A B I L S M)
       (SETQ I 0 L (LENGTH A) L1 (LENGTH B) S '())
       ((/= L L1) 0)
       (LOOP ((= I L))
	     (SETQ J 0 M '())
	     (LOOP ((= J L))
		(SETQ X (+ (NTH J (NTH I A)) (NTH J (NTH I B))))
		(PUSH X M)
		(SETQ J (+ J 1))
	     )
	     (PUSH (REVERSE M) S)
	     (SETQ I (+ I 1))
	)
	(RETURN (REVERSE S))
)
(defun MULTM (L M S)
       (SETQ I 0 L1 (LENGTH L) L2 (LENGTH M) S '())
       ((/= L1 L2) 0)
       (LOOP ((= I L1))
	    (SETQ J 0 M1 '())
	    (LOOP ((= J L1))
		  (SETQ K 0 M2 '())
		  (LOOP ((= K L1))
		       (SETQ P (* (NTH K (NTH I L)) (NTH J (NTH K M))))
		       (PUSH P M2)
		       (SETQ K (+ K 1))
		  )
		  (PUSH (sumlista M2) M1)
		  (SETQ J (+ J 1))
	    )
	    (push (REVERSE M1) S)
	    (SETQ I (+ I 1))
       )
       (RETURN (REVERSE S))
)
(defun MULTM-R (L M)
       (SETQ L1 (LENGTH L) L2 (LENGTH M) S'())
       ((/= L1 L2) (RETURN 0))
       (SETQ S (MULTM-R-AUX L M 0 '() L1))
       (RETURN (REVERSE S))
)
(DEFUN MULTM-R-AUX (L M I S L1)
       ((= I L1) (RETURN S))
       (SETQ B (MULTM-R-AUX1 L M I 0 '() L1))
       (PUSH (REVERSE B) S)
       (MULTM-R-AUX L M (+ I 1) S L1)
)
(DEFUN MULTM-R-AUX1 (L M I J M2 L1)
       ((= J L1) (RETURN M2))
       (SETQ C (MULTM-R-AUX2 L M 0 I J '() L1))
       (PUSH (sumlista C) M2)
       (MULTM-R-AUX1 L M I (+ J 1) M2 L1)
)
(DEFUN MULTM-R-AUX2 (L M K I J M2 L1)
       ((= K L1) (RETURN M2))
       (SETQ P (* (NTH K (NTH I L)) (NTH J (NTH K M))))
       (PUSH P M2)
       (MULTM-R-AUX2 L M (+ K 1) I J M2 L1)
)
(DEFUN PASCAL (X)
      (SETQ I 1 A '())
      (LOOP ((> I X) (RETURN "FIN DEL TRIANGULO"))
	    (SETQ J 0 S '())
	    (SETQ A (PASCAL-AUX A S I J))
            (PRINT A)
	    (SETQ I (+ I 1))
      )
)
(DEFUN PASCAL-AUX (A S I J)
       ((= J I) (RETURN S))
       ((OR (ZEROP J) (= J (- I 1))) (PUSH 1 S) (PASCAL-AUX A S I (+ J 1)))
       ((NOT (OR (ZEROP J) (= J (- I 1)))) (PUSH (+ (NTH J A) (NTH (- J 1) A)) S) (PASCAL-AUX A S I (+ J 1)))
)
(DEFUN HANOI (X)
       (HANOI-AUX X 1 2 3)
)
(DEFUN HANOI-AUX (X A B C)
       ((= X 1) (PRINT `(MOVER DISCO DE ,A A ,C)) (TERPRI))
       ((/= X 1) (HANOI-AUX (- X 1) A C B) (PRINT `(MOVER DISCO DE ,A A ,C)) (TERPRI) (HANOI-AUX (- X 1) B A C) (RETURN "EXITO"))
)
(DEFUN MCD A
       (SETQ L (LENGTH A))
       (SETQ M (MENOR A L))
       (RETURN (MCD-AUX A L M))
)
(DEFUN MENOR (S X)
       (SETQ E (NTH 0 S))
       (RETURN (MENOR-AUX S X E 1))
)
(DEFUN MENOR-AUX (S X A I)
       ((= I X) (RETURN A))
       ((< (NTH I S) A) (SETQ A (NTH I S)) (MENOR-AUX S X A (+ I 1)))
       (MENOR-AUX S X A (+ I 1))
)
(DEFUN MCD-AUX (S X M)
       ((= 1 (DIVIDEX S X M 0)) (RETURN M))
       ((= 0 (DIVIDEX S X M 0)) (RETURN 1))
)
(DEFUN DIVIDEX (S X M I)
       ((= I X) (RETURN 1))
       ((/= (MOD (NTH I S) M) 0) (RETURN 0))
       (RETURN (DIVIDEX S X M (+ I 1)))
)
(DEFUN MCM A
       (SETQ L (LENGTH A))
       (SETQ M (MAYOR A L))
       (RETURN (MCM-AUX A L M))
)
(DEFUN MAYOR (S X)
       (SETQ E (NTH 0 S))
       (RETURN (MAYOR-AUX S X E 1))
)
(DEFUN MAYOR-AUX (S X A I)
       ((= I X) (RETURN A))
       ((> (NTH I S) A) (SETQ A (NTH I S)) (MAYOR-AUX S X A (+ I 1)))
       (MAYOR-AUX S X A (+ I 1))
)
(DEFUN MCM-AUX (S X M)
       ((= 1 (ESDIVIDEX S X M)) (RETURN M))
       ((RETURN (MCM-AUX S X (+ M 1)))
)
(DEFUN ESDIVIDEX (S X M)
       ((ZEROP X) (RETURN 1))
       ((/= (MOD M (NTH (- X 1) S)) 0) (RETURN 0))
       (RETURN (ESDIVIDEX S (- X 1) M))
)